const W=Symbol.for("constructDateFrom");function P(e,n){return typeof e=="function"?e(n):e&&typeof e=="object"&&W in e?e[W](n):e instanceof Date?new e.constructor(n):new Date(n)}function y(e,n){return P(e,e)}let S={};function k(){return S}function p(e){const n=y(e),t=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return t.setUTCFullYear(n.getFullYear()),+e-+t}function D(e,...n){const t=P.bind(null,e||n.find(a=>typeof a=="object"));return n.map(t)}function g(e,n){const t=+y(e)-+y(n);return t<0?-1:t>0?1:t}function C(e){return P(e,Date.now())}function T(e,n,t){const[a,r]=D(t==null?void 0:t.in,e,n),s=a.getFullYear()-r.getFullYear(),o=a.getMonth()-r.getMonth();return s*12+o}function x(e){return n=>{const a=(e?Math[e]:Math.trunc)(n);return a===0?0:a}}function F(e,n){return+y(e)-+y(n)}function J(e,n){const t=y(e);return t.setHours(23,59,59,999),t}function $(e,n){const t=y(e),a=t.getMonth();return t.setFullYear(t.getFullYear(),a+1,0),t.setHours(23,59,59,999),t}function X(e,n){const t=y(e);return+J(t)==+$(t)}function O(e,n,t){const[a,r,s]=D(t==null?void 0:t.in,e,e,n),o=g(r,s),i=Math.abs(T(r,s));if(i<1)return 0;r.getMonth()===1&&r.getDate()>27&&r.setDate(30),r.setMonth(r.getMonth()-o*i);let l=g(r,s)===-o;X(a)&&i===1&&g(a,s)===1&&(l=!1);const m=o*(i-+l);return m===0?0:m}function A(e,n,t){const a=F(e,n)/1e3;return x(t==null?void 0:t.roundingMethod)(a)}const N={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},z=(e,n,t)=>{let a;const r=N[e];return typeof r=="string"?a=r:n===1?a=r.one:a=r.other.replace("{{count}}",n.toString()),t!=null&&t.addSuffix?t.comparison&&t.comparison>0?"in "+a:a+" ago":a};function b(e){return(n={})=>{const t=n.width?String(n.width):e.defaultWidth;return e.formats[t]||e.formats[e.defaultWidth]}}const I={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},Y={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},_={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},H={date:b({formats:I,defaultWidth:"full"}),time:b({formats:Y,defaultWidth:"full"}),dateTime:b({formats:_,defaultWidth:"full"})},L={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},V=(e,n,t,a)=>L[e];function d(e){return(n,t)=>{const a=t!=null&&t.context?String(t.context):"standalone";let r;if(a==="formatting"&&e.formattingValues){const o=e.defaultFormattingWidth||e.defaultWidth,i=t!=null&&t.width?String(t.width):o;r=e.formattingValues[i]||e.formattingValues[o]}else{const o=e.defaultWidth,i=t!=null&&t.width?String(t.width):e.defaultWidth;r=e.values[i]||e.values[o]}const s=e.argumentCallback?e.argumentCallback(n):n;return r[s]}}const q={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},E={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},R={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},Q={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},U={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},B={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},K=(e,n)=>{const t=Number(e),a=t%100;if(a>20||a<10)switch(a%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},G={ordinalNumber:K,era:d({values:q,defaultWidth:"wide"}),quarter:d({values:E,defaultWidth:"wide",argumentCallback:e=>e-1}),month:d({values:R,defaultWidth:"wide"}),day:d({values:Q,defaultWidth:"wide"}),dayPeriod:d({values:U,defaultWidth:"wide",formattingValues:B,defaultFormattingWidth:"wide"})};function c(e){return(n,t={})=>{const a=t.width,r=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],s=n.match(r);if(!s)return null;const o=s[0],i=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],l=Array.isArray(i)?ee(i,v=>v.test(o)):Z(i,v=>v.test(o));let m;m=e.valueCallback?e.valueCallback(l):l,m=t.valueCallback?t.valueCallback(m):m;const h=n.slice(o.length);return{value:m,rest:h}}}function Z(e,n){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&n(e[t]))return t}function ee(e,n){for(let t=0;t<e.length;t++)if(n(e[t]))return t}function j(e){return(n,t={})=>{const a=n.match(e.matchPattern);if(!a)return null;const r=a[0],s=n.match(e.parsePattern);if(!s)return null;let o=e.valueCallback?e.valueCallback(s[0]):s[0];o=t.valueCallback?t.valueCallback(o):o;const i=n.slice(r.length);return{value:o,rest:i}}}const te=/^(\d+)(th|st|nd|rd)?/i,ne=/\d+/i,ae={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},re={any:[/^b/i,/^(a|c)/i]},ie={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},oe={any:[/1/i,/2/i,/3/i,/4/i]},se={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},ue={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},me={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},de={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},ce={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},le={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},he={ordinalNumber:j({matchPattern:te,parsePattern:ne,valueCallback:e=>parseInt(e,10)}),era:c({matchPatterns:ae,defaultMatchWidth:"wide",parsePatterns:re,defaultParseWidth:"any"}),quarter:c({matchPatterns:ie,defaultMatchWidth:"wide",parsePatterns:oe,defaultParseWidth:"any",valueCallback:e=>e+1}),month:c({matchPatterns:se,defaultMatchWidth:"wide",parsePatterns:ue,defaultParseWidth:"any"}),day:c({matchPatterns:me,defaultMatchWidth:"wide",parsePatterns:de,defaultParseWidth:"any"}),dayPeriod:c({matchPatterns:ce,defaultMatchWidth:"any",parsePatterns:le,defaultParseWidth:"any"})},fe={code:"en-US",formatDistance:z,formatLong:H,formatRelative:V,localize:G,match:he,options:{weekStartsOn:0,firstWeekContainsDate:1}};function ye(e,n,t){const a=k(),r=(t==null?void 0:t.locale)??a.locale??fe,s=2520,o=g(e,n);if(isNaN(o))throw new RangeError("Invalid time value");const i=Object.assign({},t,{addSuffix:t==null?void 0:t.addSuffix,comparison:o}),[l,m]=D(t==null?void 0:t.in,...o>0?[n,e]:[e,n]),h=A(m,l),v=(p(m)-p(l))/1e3,u=Math.round((h-v)/60);let M;if(u<2)return t!=null&&t.includeSeconds?h<5?r.formatDistance("lessThanXSeconds",5,i):h<10?r.formatDistance("lessThanXSeconds",10,i):h<20?r.formatDistance("lessThanXSeconds",20,i):h<40?r.formatDistance("halfAMinute",0,i):h<60?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",1,i):u===0?r.formatDistance("lessThanXMinutes",1,i):r.formatDistance("xMinutes",u,i);if(u<45)return r.formatDistance("xMinutes",u,i);if(u<90)return r.formatDistance("aboutXHours",1,i);if(u<1440){const f=Math.round(u/60);return r.formatDistance("aboutXHours",f,i)}else{if(u<s)return r.formatDistance("xDays",1,i);if(u<43200){const f=Math.round(u/1440);return r.formatDistance("xDays",f,i)}else if(u<43200*2)return M=Math.round(u/43200),r.formatDistance("aboutXMonths",M,i)}if(M=O(m,l),M<12){const f=Math.round(u/43200);return r.formatDistance("xMonths",f,i)}else{const f=M%12,w=Math.trunc(M/12);return f<3?r.formatDistance("aboutXYears",w,i):f<9?r.formatDistance("overXYears",w,i):r.formatDistance("almostXYears",w+1,i)}}function qe(e,n){return ye(e,C(e),n)}const Me={lessThanXSeconds:{one:"moins dâ€™une seconde",other:"moins de {{count}} secondes"},xSeconds:{one:"1 seconde",other:"{{count}} secondes"},halfAMinute:"30 secondes",lessThanXMinutes:{one:"moins dâ€™une minute",other:"moins de {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"environ 1 heure",other:"environ {{count}} heures"},xHours:{one:"1 heure",other:"{{count}} heures"},xDays:{one:"1 jour",other:"{{count}} jours"},aboutXWeeks:{one:"environ 1 semaine",other:"environ {{count}} semaines"},xWeeks:{one:"1 semaine",other:"{{count}} semaines"},aboutXMonths:{one:"environ 1 mois",other:"environ {{count}} mois"},xMonths:{one:"1 mois",other:"{{count}} mois"},aboutXYears:{one:"environ 1 an",other:"environ {{count}} ans"},xYears:{one:"1 an",other:"{{count}} ans"},overXYears:{one:"plus dâ€™un an",other:"plus de {{count}} ans"},almostXYears:{one:"presquâ€™un an",other:"presque {{count}} ans"}},be=(e,n,t)=>{let a;const r=Me[e];return typeof r=="string"?a=r:n===1?a=r.one:a=r.other.replace("{{count}}",String(n)),t!=null&&t.addSuffix?t.comparison&&t.comparison>0?"dans "+a:"il y a "+a:a},ve={full:"EEEE d MMMM y",long:"d MMMM y",medium:"d MMM y",short:"dd/MM/y"},ge={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},we={full:"{{date}} 'Ã ' {{time}}",long:"{{date}} 'Ã ' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Pe={date:b({formats:ve,defaultWidth:"full"}),time:b({formats:ge,defaultWidth:"full"}),dateTime:b({formats:we,defaultWidth:"full"})},De={lastWeek:"eeee 'dernier Ã ' p",yesterday:"'hier Ã ' p",today:"'aujourdâ€™hui Ã ' p",tomorrow:"'demain Ã ' p'",nextWeek:"eeee 'prochain Ã ' p",other:"P"},We=(e,n,t,a)=>De[e],pe={narrow:["av. J.-C","ap. J.-C"],abbreviated:["av. J.-C","ap. J.-C"],wide:["avant JÃ©sus-Christ","aprÃ¨s JÃ©sus-Christ"]},je={narrow:["T1","T2","T3","T4"],abbreviated:["1er trim.","2Ã¨me trim.","3Ã¨me trim.","4Ã¨me trim."],wide:["1er trimestre","2Ã¨me trimestre","3Ã¨me trimestre","4Ã¨me trimestre"]},Se={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["janv.","fÃ©vr.","mars","avr.","mai","juin","juil.","aoÃ»t","sept.","oct.","nov.","dÃ©c."],wide:["janvier","fÃ©vrier","mars","avril","mai","juin","juillet","aoÃ»t","septembre","octobre","novembre","dÃ©cembre"]},ke={narrow:["D","L","M","M","J","V","S"],short:["di","lu","ma","me","je","ve","sa"],abbreviated:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],wide:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},Ce={narrow:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"mat.",afternoon:"ap.m.",evening:"soir",night:"mat."},abbreviated:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"matin",afternoon:"aprÃ¨s-midi",evening:"soir",night:"matin"},wide:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"du matin",afternoon:"de lâ€™aprÃ¨s-midi",evening:"du soir",night:"du matin"}},Te=(e,n)=>{const t=Number(e),a=n==null?void 0:n.unit;if(t===0)return"0";const r=["year","week","hour","minute","second"];let s;return t===1?s=a&&r.includes(a)?"Ã¨re":"er":s="Ã¨me",t+s},xe=["MMM","MMMM"],Fe={preprocessor:(e,n)=>e.getDate()===1||!n.some(a=>a.isToken&&xe.includes(a.value))?n:n.map(a=>a.isToken&&a.value==="do"?{isToken:!0,value:"d"}:a),ordinalNumber:Te,era:d({values:pe,defaultWidth:"wide"}),quarter:d({values:je,defaultWidth:"wide",argumentCallback:e=>e-1}),month:d({values:Se,defaultWidth:"wide"}),day:d({values:ke,defaultWidth:"wide"}),dayPeriod:d({values:Ce,defaultWidth:"wide"})},Je=/^(\d+)(iÃ¨me|Ã¨re|Ã¨me|er|e)?/i,$e=/\d+/i,Xe={narrow:/^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,abbreviated:/^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,wide:/^(avant JÃ©sus-Christ|aprÃ¨s JÃ©sus-Christ)/i},Oe={any:[/^av/i,/^ap/i]},Ae={narrow:/^T?[1234]/i,abbreviated:/^[1234](er|Ã¨me|e)? trim\.?/i,wide:/^[1234](er|Ã¨me|e)? trimestre/i},Ne={any:[/1/i,/2/i,/3/i,/4/i]},ze={narrow:/^[jfmasond]/i,abbreviated:/^(janv|fÃ©vr|mars|avr|mai|juin|juill|juil|aoÃ»t|sept|oct|nov|dÃ©c)\.?/i,wide:/^(janvier|fÃ©vrier|mars|avril|mai|juin|juillet|aoÃ»t|septembre|octobre|novembre|dÃ©cembre)/i},Ie={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},Ye={narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},_e={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},He={narrow:/^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,any:/^([ap]\.?\s?m\.?|du matin|de l'aprÃ¨s[-\s]midi|du soir|de la nuit)/i},Le={any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},Ve={ordinalNumber:j({matchPattern:Je,parsePattern:$e,valueCallback:e=>parseInt(e)}),era:c({matchPatterns:Xe,defaultMatchWidth:"wide",parsePatterns:Oe,defaultParseWidth:"any"}),quarter:c({matchPatterns:Ae,defaultMatchWidth:"wide",parsePatterns:Ne,defaultParseWidth:"any",valueCallback:e=>e+1}),month:c({matchPatterns:ze,defaultMatchWidth:"wide",parsePatterns:Ie,defaultParseWidth:"any"}),day:c({matchPatterns:Ye,defaultMatchWidth:"wide",parsePatterns:_e,defaultParseWidth:"any"}),dayPeriod:c({matchPatterns:He,defaultMatchWidth:"any",parsePatterns:Le,defaultParseWidth:"any"})},Ee={code:"fr",formatDistance:be,formatLong:Pe,formatRelative:We,localize:Fe,match:Ve,options:{weekStartsOn:1,firstWeekContainsDate:4}};export{Ee as a,qe as f};
